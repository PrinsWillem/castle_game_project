{"ast":null,"code":"var _jsxFileName = \"/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/Game.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport Player1Hand from './Player1Hand';\nimport Player1Materials from './Player1Materials';\nimport Player1Tools from './Player1Tools';\nimport Player2Hand from './Player2Hand';\nimport Player2Materials from './Player2Materials';\nimport Player2Tools from './Player2Tools';\nimport DiscardDeck from './DiscardDeck';\nimport Deck from './Deck';\nimport './game.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Game = ({\n  firstPlayerHand,\n  firstComputerHand,\n  deckAfterDealing\n}) => {\n  _s();\n\n  const [updatedDeck, setUpdatedDeck] = useState([]);\n  const [player1Hand, setPlayer1Hand] = useState([]);\n  const [player2Hand, setPlayer2Hand] = useState([]);\n  const [player1Materials, setPlayer1Materials] = useState([]);\n  const [player2Materials, setPlayer2Materials] = useState([]);\n  const [player1Tools, setPlayer1Tools] = useState([]);\n  const [player2Tools, setPlayer2Tools] = useState([]);\n  const [materialCardCheck, setMaterialCardCheck] = useState([]);\n  const [attackedCard, setAttacked] = useState([]);\n  const [defenceCard, setDefenceCard] = useState([]);\n  const [updatedDiscardDeck, setUpdatedDiscardDeck] = useState([]); // PLAYER 1 \n\n  const onMaterialCardClick = function (card) {\n    const array1 = player1Materials;\n    const array2 = setMaterialCardCheck(card);\n\n    if (player1Materials.length > 0 && (array1 = array1.filter(card => !array2.includes(card)))) {\n      const copiedPlayer1Materials = [...player1Materials, card];\n      setPlayer1Materials(copiedPlayer1Materials);\n      removeCardFromPlayer(card);\n    }\n  };\n\n  const onToolCardClick = function (card) {\n    const copiedPlayer1Tools = [...player1Tools, card];\n    setPlayer1Tools(copiedPlayer1Tools);\n    removeCardFromPlayer(card);\n  }; // const onAttackCardClick = function(card, materialCard, defenceCard){            // By playing a attackcard(RED) -> check if player2Materials has the opposite MaterialCard on the table. -> if 'true' -> playcard and check if player 2 has opposite defencecard(Green) in Player2Hand -> if true discard both cards attackcard & defencecard (RED & GREEN) and keep player2MaterialCard stays on the table. If not discard Attackcard en MaterialCard. \n  //     if(player2Materials.includes(materialCard)){\n  //         if(Player1Hand.includes()){\n  //         }\n  //     }\n  // };\n\n\n  const onDeckCardClick = function (card) {\n    if (player1Hand.length < 5) {\n      const copiedDeck = [...updatedDeck, card];\n      setUpdatedDeck(copiedDeck);\n      addCardFromDeck(card);\n      removeCardFromDeck(card);\n    }\n  };\n\n  const removeCardFromPlayer = function (card) {\n    const index = player1Hand.indexOf(card);\n    const copiedPlayer1Hand = [...player1Hand];\n    copiedPlayer1Hand.splice(index, 1);\n    setPlayer1Hand(copiedPlayer1Hand);\n  };\n\n  const addCardFromDeck = function (card) {\n    player1Hand.push(card);\n    setPlayer1Hand(player1Hand);\n  };\n\n  const onDiscardCardClick = function (card) {\n    const copiedPlayer1Hand = [...player1Hand, card];\n    setPlayer1Hand(copiedPlayer1Hand);\n    removeCardFromPlayer(card);\n    addCardToDiscardDeck(card);\n  }; // PLAYER 2\n\n\n  const onMaterialCardClick2 = function (card) {\n    if (!player2Materials.includes(card)) {\n      const copiedPlayer2Materials = [...player2Materials, card];\n      setPlayer2Materials(copiedPlayer2Materials);\n      removeCardFromPlayer2(card);\n    }\n  };\n\n  const onToolCardClick2 = function (card) {\n    const copiedPlayer2Tools = [...player2Tools, card];\n    setPlayer2Tools(copiedPlayer2Tools);\n    removeCardFromPlayer2(card);\n  };\n\n  const onDeckCardClick2 = function (card) {\n    if (player2Hand.length < 5) {\n      const copiedDeck = [...updatedDeck, card];\n      setUpdatedDeck(copiedDeck);\n      addCardFromDeck2(card);\n      removeCardFromDeck(card);\n    }\n  };\n\n  const removeCardFromPlayer2 = function (card) {\n    const index = player2Hand.indexOf(card);\n    const copiedPlayer2Hand = [...player2Hand];\n    copiedPlayer2Hand.splice(index, 1);\n    setPlayer2Hand(copiedPlayer2Hand);\n  };\n\n  const addCardFromDeck2 = function (card) {\n    player2Hand.push(card);\n    setPlayer2Hand(player2Hand);\n  };\n\n  const onDiscardCardClick2 = function (card) {\n    const copiedPlayer2Hand = [...player2Hand, card];\n    setPlayer2Hand(copiedPlayer2Hand);\n    removeCardFromPlayer2(card);\n    addCardToDiscardDeck(card);\n  }; //PLAYER1 & PLAYER2\n\n\n  const removeCardFromDeck = function (card) {\n    const index = updatedDeck.indexOf(card);\n    const copiedUpdatedDeck = [...updatedDeck];\n    copiedUpdatedDeck.splice(index, 1);\n    setUpdatedDeck(copiedUpdatedDeck);\n  };\n\n  const addCardToDiscardDeck = function (card) {\n    updatedDiscardDeck.push(card);\n    setUpdatedDiscardDeck(updatedDiscardDeck);\n  };\n\n  useEffect(() => {\n    setUpdatedDeck(deckAfterDealing);\n  }, [deckAfterDealing]);\n  useEffect(() => {\n    setPlayer1Hand(firstPlayerHand);\n  }, [firstPlayerHand]);\n  useEffect(() => {\n    setPlayer2Hand(firstComputerHand);\n  }, [firstComputerHand]); // const computerCards = firstComputerHand(allCards).map((card) => {\n  //     return(\n  //         <li className=\"computer-card\" key={card._id}><img src={card.img} alt={card.name}/></li>\n  //     )\n  // });\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"grid-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"deck\",\n      children: /*#__PURE__*/_jsxDEV(Deck, {\n        updatedDeck: updatedDeck,\n        onDeckCardClick: onDeckCardClick,\n        onDeckCardClick2: onDeckCardClick2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"player2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player2-hand\",\n          children: /*#__PURE__*/_jsxDEV(Player2Hand, {\n            player2Hand: player2Hand,\n            onMaterialCardClick2: onMaterialCardClick2,\n            onToolCardClick2: onToolCardClick2,\n            onDiscardCardClick2: onDiscardCardClick2\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"player2-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player2-material\",\n            children: /*#__PURE__*/_jsxDEV(Player2Materials, {\n              player2Materials: player2Materials\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player2-tools\",\n            children: /*#__PURE__*/_jsxDEV(Player2Tools, {\n              player2Tools: player2Tools\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"player\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"player-table\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-material\",\n            children: /*#__PURE__*/_jsxDEV(Player1Materials, {\n              player1Materials: player1Materials\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"player-tools\",\n            children: /*#__PURE__*/_jsxDEV(Player1Tools, {\n              player1Tools: player1Tools\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"player-hand\",\n          children: /*#__PURE__*/_jsxDEV(Player1Hand, {\n            player1Hand: player1Hand,\n            onMaterialCardClick: onMaterialCardClick,\n            onToolCardClick: onToolCardClick,\n            onDiscardCardClick: onDiscardCardClick,\n            materialCardCheck: materialCardCheck\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"discard\",\n      children: /*#__PURE__*/_jsxDEV(DiscardDeck, {\n        updatedDiscardDeck: updatedDiscardDeck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Game, \"8WHNrkA33AARTflcYF64zdvcBBs=\");\n\n_c = Game;\nexport default Game;\n\nvar _c;\n\n$RefreshReg$(_c, \"Game\");","map":{"version":3,"sources":["/Users/anthony/Desktop/G27/week_9/castle_game_project/client/src/components/Game.js"],"names":["React","useState","useEffect","Player1Hand","Player1Materials","Player1Tools","Player2Hand","Player2Materials","Player2Tools","DiscardDeck","Deck","Game","firstPlayerHand","firstComputerHand","deckAfterDealing","updatedDeck","setUpdatedDeck","player1Hand","setPlayer1Hand","player2Hand","setPlayer2Hand","player1Materials","setPlayer1Materials","player2Materials","setPlayer2Materials","player1Tools","setPlayer1Tools","player2Tools","setPlayer2Tools","materialCardCheck","setMaterialCardCheck","attackedCard","setAttacked","defenceCard","setDefenceCard","updatedDiscardDeck","setUpdatedDiscardDeck","onMaterialCardClick","card","array1","array2","length","filter","includes","copiedPlayer1Materials","removeCardFromPlayer","onToolCardClick","copiedPlayer1Tools","onDeckCardClick","copiedDeck","addCardFromDeck","removeCardFromDeck","index","indexOf","copiedPlayer1Hand","splice","push","onDiscardCardClick","addCardToDiscardDeck","onMaterialCardClick2","copiedPlayer2Materials","removeCardFromPlayer2","onToolCardClick2","copiedPlayer2Tools","onDeckCardClick2","addCardFromDeck2","copiedPlayer2Hand","onDiscardCardClick2","copiedUpdatedDeck"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport Player1Hand from './Player1Hand';\nimport Player1Materials from './Player1Materials';\nimport Player1Tools from './Player1Tools';\nimport Player2Hand from './Player2Hand';\nimport Player2Materials from './Player2Materials';\nimport Player2Tools from './Player2Tools';\nimport DiscardDeck from './DiscardDeck';\nimport Deck from './Deck';\nimport './game.css';\n\nconst Game = ({firstPlayerHand, firstComputerHand, deckAfterDealing}) => {\n\n    const [updatedDeck, setUpdatedDeck] = useState([]);    \n    const [player1Hand, setPlayer1Hand] = useState([]); \n    const [player2Hand, setPlayer2Hand] = useState([]);\n\n    const [player1Materials, setPlayer1Materials] = useState([]);\n    const [player2Materials, setPlayer2Materials] = useState([]);\n    const [player1Tools, setPlayer1Tools] = useState([]);\n    const [player2Tools, setPlayer2Tools] = useState([]);\n\n    const [materialCardCheck, setMaterialCardCheck] = useState([]);\n    const [attackedCard, setAttacked] = useState([]);\n    const [defenceCard, setDefenceCard] = useState([]);\n    const [updatedDiscardDeck, setUpdatedDiscardDeck] = useState([]);\n    \n    // PLAYER 1 \n\n    const onMaterialCardClick = function(card){\n        const array1 = player1Materials;\n        const array2 = setMaterialCardCheck(card);\n        if((player1Materials.length > 0) && (array1 = array1.filter(card => !array2.includes(card)))){\n            const copiedPlayer1Materials = [...player1Materials, card];\n            setPlayer1Materials(copiedPlayer1Materials);\n            removeCardFromPlayer(card);\n        }\n    };\n\n    const onToolCardClick = function(card){\n        const copiedPlayer1Tools = [...player1Tools, card];\n        setPlayer1Tools(copiedPlayer1Tools);\n        removeCardFromPlayer(card);\n    };\n\n    // const onAttackCardClick = function(card, materialCard, defenceCard){            // By playing a attackcard(RED) -> check if player2Materials has the opposite MaterialCard on the table. -> if 'true' -> playcard and check if player 2 has opposite defencecard(Green) in Player2Hand -> if true discard both cards attackcard & defencecard (RED & GREEN) and keep player2MaterialCard stays on the table. If not discard Attackcard en MaterialCard. \n    //     if(player2Materials.includes(materialCard)){\n    //         if(Player1Hand.includes()){\n\n    //         }\n    //     }\n    // };\n\n    const onDeckCardClick = function(card){\n        if(player1Hand.length < 5){\n            const copiedDeck = [...updatedDeck, card];\n            setUpdatedDeck(copiedDeck);\n            addCardFromDeck(card);\n            removeCardFromDeck(card);\n        }\n    };\n\n    const removeCardFromPlayer = function(card){\n        const index = player1Hand.indexOf(card);\n        const copiedPlayer1Hand = [...player1Hand];\n        copiedPlayer1Hand.splice(index, 1);\n        setPlayer1Hand(copiedPlayer1Hand); \n    };\n\n    const addCardFromDeck = function(card){\n        player1Hand.push(card);\n        setPlayer1Hand(player1Hand); \n    };\n\n    const onDiscardCardClick = function(card){\n        const copiedPlayer1Hand = [...player1Hand, card];\n        setPlayer1Hand(copiedPlayer1Hand);\n        removeCardFromPlayer(card);\n        addCardToDiscardDeck(card);\n    }\n\n    // PLAYER 2\n\n    const onMaterialCardClick2 = function(card){\n        if(!player2Materials.includes(card)){\n            const copiedPlayer2Materials = [...player2Materials, card];\n            setPlayer2Materials(copiedPlayer2Materials);\n            removeCardFromPlayer2(card);\n        }\n    };\n\n    const onToolCardClick2 = function(card){\n        const copiedPlayer2Tools = [...player2Tools, card];\n        setPlayer2Tools(copiedPlayer2Tools);\n        removeCardFromPlayer2(card);\n    };\n\n    const onDeckCardClick2 = function(card){\n        if(player2Hand.length < 5){const copiedDeck = [...updatedDeck, card];\n            setUpdatedDeck(copiedDeck);\n            addCardFromDeck2(card);\n            removeCardFromDeck(card);\n        }\n    };\n\n    const removeCardFromPlayer2 = function(card){\n        const index = player2Hand.indexOf(card);\n        const copiedPlayer2Hand = [...player2Hand];\n        copiedPlayer2Hand.splice(index, 1);\n        setPlayer2Hand(copiedPlayer2Hand); \n    };\n\n    const addCardFromDeck2 = function(card){\n        player2Hand.push(card);\n        setPlayer2Hand(player2Hand); \n    };\n\n    const onDiscardCardClick2 = function(card){\n        const copiedPlayer2Hand = [...player2Hand, card];\n        setPlayer2Hand(copiedPlayer2Hand);\n        removeCardFromPlayer2(card);\n        addCardToDiscardDeck(card);\n    }\n\n    //PLAYER1 & PLAYER2\n\n    const removeCardFromDeck = function(card){\n        const index = updatedDeck.indexOf(card);\n        const copiedUpdatedDeck = [...updatedDeck];\n        copiedUpdatedDeck.splice(index, 1);\n        setUpdatedDeck(copiedUpdatedDeck); \n    };\n\n    const addCardToDiscardDeck = function(card){\n        updatedDiscardDeck.push(card);\n        setUpdatedDiscardDeck(updatedDiscardDeck); \n    };\n\n    useEffect(() => {\n        setUpdatedDeck(deckAfterDealing)\n    }, [deckAfterDealing]);\n\n    useEffect(() => {\n        setPlayer1Hand(firstPlayerHand)\n    }, [firstPlayerHand]);\n\n    useEffect(() => {\n        setPlayer2Hand(firstComputerHand)\n    }, [firstComputerHand])\n\n    // const computerCards = firstComputerHand(allCards).map((card) => {\n    //     return(\n    //         <li className=\"computer-card\" key={card._id}><img src={card.img} alt={card.name}/></li>\n    //     )\n    // });\n\n    return(\n        <div id=\"grid-container\">\n            <div className=\"deck\">\n                <Deck updatedDeck={updatedDeck} onDeckCardClick={onDeckCardClick} onDeckCardClick2={onDeckCardClick2}/>\n            </div>\n            <div className=\"game\">\n                <div className=\"player2\">\n                    <div className=\"player2-hand\">\n                        <Player2Hand player2Hand={player2Hand} onMaterialCardClick2={onMaterialCardClick2} onToolCardClick2={onToolCardClick2} onDiscardCardClick2={onDiscardCardClick2}/>\n                    </div>\n                    <div id=\"player2-table\">\n                        <div className=\"player2-material\">\n                            <Player2Materials player2Materials={player2Materials}/>\n                        </div>\n                        <div className=\"player2-tools\">\n                            <Player2Tools player2Tools={player2Tools}/>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"player\">\n                    <div id=\"player-table\">\n                        <div className=\"player-material\">\n                            <Player1Materials player1Materials={player1Materials}/>\n                        </div>\n                        <div className=\"player-tools\">\n                            <Player1Tools player1Tools={player1Tools}/>\n                        </div>\n                    </div>\n                    <div className=\"player-hand\">\n                        <Player1Hand player1Hand={player1Hand} onMaterialCardClick={onMaterialCardClick} onToolCardClick={onToolCardClick} onDiscardCardClick={onDiscardCardClick} materialCardCheck={materialCardCheck}/>\n                    </div>\n                </div>\n            </div>\n            <div className=\"discard\">\n                <DiscardDeck updatedDiscardDeck={updatedDiscardDeck}/>\n            </div>\n        </div>\n    );\n\n};\n\nexport default Game;"]},"metadata":{},"sourceType":"module"}